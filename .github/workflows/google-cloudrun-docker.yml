name: Deploy MT5 to BigQuery Pipeline

on:
  push:
    branches:
      - main
    paths:
      - 'functions/mt5 to cloudfunction/**'
      - 'terraform/**'
      - '.github/workflows/mt5-bigquery-deployment.yml'
  workflow_dispatch:  # Allows manual triggering

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  REGION: us-central1
  TF_VAR_project_id: ${{ secrets.GCP_PROJECT_ID }}

jobs:
  deploy-infrastructure:
    name: Deploy Infrastructure with Terraform
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write  # Needed for Google auth

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Google Auth
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.4.0
          
      - name: Create tmp directory for archives
        run: mkdir -p terraform/tmp
          
      - name: Zip Cloud Function source
        run: |
          cd functions/mt5\ to\ cloudfunction
          zip -r ../../terraform/tmp/mt5_to_cloudfunction.zip .
          
      - name: Terraform Init
        working-directory: ./terraform
        run: |
          terraform init

      - name: Terraform Plan
        working-directory: ./terraform
        run: |
          terraform plan -var="project_id=$PROJECT_ID" -var="region=$REGION" -out=tfplan
          
      - name: Terraform Apply
        working-directory: ./terraform
        run: |
          terraform apply -auto-approve tfplan
          
      - name: Store Function URL as artifact
        working-directory: ./terraform
        run: |
          terraform output -raw mt5_function_url > function_url.txt
          
      - name: Upload Function URL artifact
        uses: actions/upload-artifact@v3
        with:
          name: function-url
          path: ./terraform/function_url.txt
          retention-days: 7

  build-backend:
    name: Build and Test Backend
    runs-on: ubuntu-latest
    needs: deploy-infrastructure
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip'
          
      - name: Install backend dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt || echo "No requirements.txt found, creating it"
          pip install websockets==10.4 python-dotenv==0.21.0 requests==2.28.2 backoff==2.2.1 google-cloud-bigquery==3.11.4
          
      - name: Download function URL
        uses: actions/download-artifact@v3
        with:
          name: function-url
          
      - name: Create .env file for local testing
        run: |
          echo "# MT5 to BigQuery Pipeline Configuration" > backend/.env
          echo "MT5_WS_URL=ws://localhost:8765" >> backend/.env
          echo "CLOUD_FUNCTION_URL=$(cat function_url.txt)" >> backend/.env
          echo "MT5_SYMBOLS=EURUSD,GBPUSD,USDJPY,XAUUSD" >> backend/.env
          echo "BQ_DATASET=mt5_trading" >> backend/.env
          echo "BQ_POSITIONS_TABLE=positions" >> backend/.env
          echo "BQ_TRANSACTIONS_TABLE=transactions" >> backend/.env
          echo "BQ_PRICES_TABLE=price_updates" >> backend/.env
          
      - name: Display deployment info
        run: |
          echo "MT5 to BigQuery function URL:"
          cat function_url.txt
          echo ""
          echo "To connect your MT5 client to BigQuery:"
          echo "1. Configure .env file with CLOUD_FUNCTION_URL=$(cat function_url.txt)"
          echo "2. Run the cloudfunction_client.py script:"
          echo "   python backend/cloudfunction_client.py"